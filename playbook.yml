---
- hosts: all
  gather_facts: True
  vars:
      hss_root: '/home/vagrant/hss'
      virtualenv_root: '/home/vagrant/env'
      ssh_known_hosts_command: "ssh-keyscan -H -T 10"
      ssh_known_hosts_file: "/etc/ssh/ssh_known_hosts"
      ssh_known_hosts:
          - bitbucket.org
          - github.com
  tasks:
    - name: Update OS
      apt: upgrade=dist
      become: yes

    - name: Install necessary packages via apt
      apt: name={{item}} state=installed
      become: yes
      with_items:
          - mysql-server
          - python-pip
          - python-dev
          - libmysqlclient-dev
          - python-mysqldb # needed by Ansible
          - mercurial
          - git # needed for the tinymce subrepository in newhssonline
          - python-virtualenv

    # Fix SSH issues when cloning repos (taken from https://juriansluiman.nl/article/151/managing-ssh-known-hosts-with-ansible)
    - name: Make sure the known hosts file exists
      file: path={{ ssh_known_hosts_file }} state=touch
      become: yes
    - name: Check host name availability
      shell: "ssh-keygen -f {{ ssh_known_hosts_file }} -F {{ item }}"
      with_items: ssh_known_hosts
      register: ssh_known_host_results
      ignore_errors: yes
    - name: Scan the public key
      shell: "{{ ssh_known_hosts_command}} {{ item.item }} >> {{ ssh_known_hosts_file }}"
      become: yes
      with_items: ssh_known_host_results.results
      when: item.stdout == ""

    - name: Tell Mercurial to trust the vagrant user
      copy: content="[trusted]\nusers = vagrant\n" dest=/etc/mercurial/hgrc
      become: yes

    - name: Clone HSS repositories, if not already present
      hg: repo={{item}} force=no update=no dest={{hss_root}}/{{item | basename}}
      with_items:
          - ssh://hg@bitbucket.org/hssonline/newhssonline
          - ssh://hg@bitbucket.org/hssonline/django-conference
          - ssh://hg@bitbucket.org/hssonline/django-elect

    - name: Install django-conference and django-elect to the virtualenv root in editable mode
      pip: name={{hss_root}}/{{item}} extra_args=-e virtualenv={{virtualenv_root}} virtualenv_site_packages=yes
      with_items: ['django-conference', 'django-elect']

    - name: Install hssonline requirements to the virtualenv root
      pip: requirements={{hss_root}}/newhssonline/requirements.txt virtualenv={{virtualenv_root}}

    - name: Activate virtualenv on login
      copy: content="source {{virtualenv_root}}/bin/activate" dest=/home/vagrant/.bash_profile owner=vagrant group=vagrant

    - name: Set default storage engine to MyISAM
      mysql_variables: variable=default_storage_engine value=MyISAM
      become: yes

    - name: Ensure MySQL is running
      service: name=mysql state=started enabled=true
      become: yes

    - name: Add MySQL DBs
      mysql_db: name={{ item }} state=present
      become: yes
      with_items: ['hssonline', 'conference', 'election']

    - name: Add MySQL users
      mysql_user: name={{ item.name }} password={{ item.password }} priv={{ item.db }}.*:ALL/test_{{ item.db }}.*:ALL
      become: yes
      with_items:
          - { name: 'hssonline', db: 'hssonline', password: 'foo' }
          - { name: 'conferenceUser', db: 'conference', password: 'conferencePass' }
          - { name: 'electionUser', db: 'election', password: 'electionPass' }
